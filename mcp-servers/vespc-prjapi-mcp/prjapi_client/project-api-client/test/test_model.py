# coding: utf-8

"""
    STAIoTCraft - Project API

    REST API to access STAIoTCraft Back-End web-service User Projects

    The version of the OpenAPI document: 3.0.7
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from project_api_client.models.model import Model

class TestModel(unittest.TestCase):
    """Model unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Model:
        """Test Model
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Model`
        """
        model = Model()
        if include_optional:
            return Model(
                dataset = {"dataset_id":"dataset_id","name":"name"},
                target = {"type":"mlc","component":"lsm6dsv16x","device":"steval-mkboxpro"},
                uuid = 'z',
                name = 'z0',
                metadata = {"type":"classifier","classes":["classes","classes"]},
                training = {"runtime":{"job_id":"job_id","tool":"tool","version":"version"},"configuration":"configuration.json","artifacts":["artifacts","artifacts"],"reports":["reports","reports"],"creation_time":["creation_time"],"last_update_time":["last_update_time"]},
                creation_time = '',
                last_update_time = '',
                model_owner_uuid = 'z'
            )
        else:
            return Model(
                dataset = {"dataset_id":"dataset_id","name":"name"},
                target = {"type":"mlc","component":"lsm6dsv16x","device":"steval-mkboxpro"},
                uuid = 'z',
                name = 'z0',
                metadata = {"type":"classifier","classes":["classes","classes"]},
                training = {"runtime":{"job_id":"job_id","tool":"tool","version":"version"},"configuration":"configuration.json","artifacts":["artifacts","artifacts"],"reports":["reports","reports"],"creation_time":["creation_time"],"last_update_time":["last_update_time"]},
                model_owner_uuid = 'z',
        )
        """

    def testModel(self):
        """Test Model"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
