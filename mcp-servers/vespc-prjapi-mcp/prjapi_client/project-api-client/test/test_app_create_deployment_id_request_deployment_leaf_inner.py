# coding: utf-8

"""
    STAIoTCraft - Project API

    REST API to access STAIoTCraft Back-End web-service User Projects

    The version of the OpenAPI document: 3.0.7
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from project_api_client.models.app_create_deployment_id_request_deployment_leaf_inner import AppCreateDeploymentIdRequestDeploymentLeafInner

class TestAppCreateDeploymentIdRequestDeploymentLeafInner(unittest.TestCase):
    """AppCreateDeploymentIdRequestDeploymentLeafInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AppCreateDeploymentIdRequestDeploymentLeafInner:
        """Test AppCreateDeploymentIdRequestDeploymentLeafInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AppCreateDeploymentIdRequestDeploymentLeafInner`
        """
        model = AppCreateDeploymentIdRequestDeploymentLeafInner()
        if include_optional:
            return AppCreateDeploymentIdRequestDeploymentLeafInner(
                gateway_id = '',
                device_id = '',
                application = '',
                description = '',
                display_name = '',
                datalogging = project_api_client.models.app_create_deployment_id_request_deployment_leaf_inner_datalogging.app_create_deployment_id_request_deployment_leaf_inner_datalogging(
                    application = '', 
                    firmware_update = True, ),
                inference = project_api_client.models.app_create_deployment_id_request_deployment_leaf_inner_inference.app_create_deployment_id_request_deployment_leaf_inner_inference(
                    application = '', 
                    firmware_update = True, 
                    models = [
                        project_api_client.models.app_create_deployment_id_request_deployment_leaf_inner_inference_models_inner.app_create_deployment_id_request_deployment_leaf_inner_inference_models_inner(
                            artifact_type = '', 
                            component_name = '', 
                            model_name_reference = '', )
                        ], )
            )
        else:
            return AppCreateDeploymentIdRequestDeploymentLeafInner(
        )
        """

    def testAppCreateDeploymentIdRequestDeploymentLeafInner(self):
        """Test AppCreateDeploymentIdRequestDeploymentLeafInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
