# coding: utf-8

"""
    STAIoTCraft - Project API

    REST API to access STAIoTCraft Back-End web-service User Projects

    The version of the OpenAPI document: 3.0.7
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, field_validator
from typing import Optional
from typing_extensions import Annotated
from project_api_client.models.job_artifact import JobArtifact

from project_api_client.api_client import ApiClient, RequestSerialized
from project_api_client.api_response import ApiResponse
from project_api_client.rest import RESTResponseType


class ArtifactsApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def app_download_activity_artifacts(
        self,
        project_name: Annotated[str, Field(min_length=1, strict=True, description="Project `name` identifier")],
        model_name: Annotated[str, Field(min_length=1, strict=True, description="Model `name` identifier")],
        activity_type: Annotated[str, Field(min_length=1, strict=True, description="Activity `name` identifier")],
        job_artifact: Annotated[JobArtifact, Field(description="The job artifact to be downloaded to user workspace.")],
        as_org: Annotated[Optional[Annotated[str, Field(min_length=1, strict=True)]], Field(description="sometimes a user will share a project with an org ")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Download Activity Job Artifacts

        

        :param project_name: Project `name` identifier (required)
        :type project_name: str
        :param model_name: Model `name` identifier (required)
        :type model_name: str
        :param activity_type: Activity `name` identifier (required)
        :type activity_type: str
        :param job_artifact: The job artifact to be downloaded to user workspace. (required)
        :type job_artifact: JobArtifact
        :param as_org: sometimes a user will share a project with an org 
        :type as_org: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._app_download_activity_artifacts_serialize(
            project_name=project_name,
            model_name=model_name,
            activity_type=activity_type,
            job_artifact=job_artifact,
            as_org=as_org,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '201': None,
            '400': None,
            '401': None,
            '404': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def app_download_activity_artifacts_with_http_info(
        self,
        project_name: Annotated[str, Field(min_length=1, strict=True, description="Project `name` identifier")],
        model_name: Annotated[str, Field(min_length=1, strict=True, description="Model `name` identifier")],
        activity_type: Annotated[str, Field(min_length=1, strict=True, description="Activity `name` identifier")],
        job_artifact: Annotated[JobArtifact, Field(description="The job artifact to be downloaded to user workspace.")],
        as_org: Annotated[Optional[Annotated[str, Field(min_length=1, strict=True)]], Field(description="sometimes a user will share a project with an org ")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Download Activity Job Artifacts

        

        :param project_name: Project `name` identifier (required)
        :type project_name: str
        :param model_name: Model `name` identifier (required)
        :type model_name: str
        :param activity_type: Activity `name` identifier (required)
        :type activity_type: str
        :param job_artifact: The job artifact to be downloaded to user workspace. (required)
        :type job_artifact: JobArtifact
        :param as_org: sometimes a user will share a project with an org 
        :type as_org: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._app_download_activity_artifacts_serialize(
            project_name=project_name,
            model_name=model_name,
            activity_type=activity_type,
            job_artifact=job_artifact,
            as_org=as_org,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '201': None,
            '400': None,
            '401': None,
            '404': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def app_download_activity_artifacts_without_preload_content(
        self,
        project_name: Annotated[str, Field(min_length=1, strict=True, description="Project `name` identifier")],
        model_name: Annotated[str, Field(min_length=1, strict=True, description="Model `name` identifier")],
        activity_type: Annotated[str, Field(min_length=1, strict=True, description="Activity `name` identifier")],
        job_artifact: Annotated[JobArtifact, Field(description="The job artifact to be downloaded to user workspace.")],
        as_org: Annotated[Optional[Annotated[str, Field(min_length=1, strict=True)]], Field(description="sometimes a user will share a project with an org ")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Download Activity Job Artifacts

        

        :param project_name: Project `name` identifier (required)
        :type project_name: str
        :param model_name: Model `name` identifier (required)
        :type model_name: str
        :param activity_type: Activity `name` identifier (required)
        :type activity_type: str
        :param job_artifact: The job artifact to be downloaded to user workspace. (required)
        :type job_artifact: JobArtifact
        :param as_org: sometimes a user will share a project with an org 
        :type as_org: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._app_download_activity_artifacts_serialize(
            project_name=project_name,
            model_name=model_name,
            activity_type=activity_type,
            job_artifact=job_artifact,
            as_org=as_org,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '201': None,
            '400': None,
            '401': None,
            '404': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _app_download_activity_artifacts_serialize(
        self,
        project_name,
        model_name,
        activity_type,
        job_artifact,
        as_org,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if project_name is not None:
            _path_params['project_name'] = project_name
        if model_name is not None:
            _path_params['model_name'] = model_name
        if activity_type is not None:
            _path_params['activity_type'] = activity_type
        # process the query parameters
        if as_org is not None:
            
            _query_params.append(('as_org', as_org))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if job_artifact is not None:
            _body_params = job_artifact



        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'bearerAuth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/projects/{project_name}/models/{model_name}/{activity_type}/artifacts',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


