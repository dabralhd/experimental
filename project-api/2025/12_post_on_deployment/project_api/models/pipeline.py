# coding: utf-8

from __future__ import absolute_import

from datetime import date, datetime  # noqa: F401
from typing import Dict, List  # noqa: F401

from project_api import util
from project_api.models.base_model_ import Model
from project_api.models.runtime import Runtime


class Pipeline(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, runtime: Runtime=None,  configuration: str=None, reports: List=None, artifacts: List=None):  # noqa: E501
        """Pipeline - a model defined in Swagger
        
        :param runtime: The runtime of this Pipeline.  # noqa: E501
        :type runtime: Runtime
        :param configuration: The configuration used for this Pipeline.  # noqa: E501
        :type configuration: str
        :param reports: The list of reports of this Pipeline.  # noqa: E501
        :type reports: List[str]
        :param artifacts: The list of artifacts of this Pipeline.  # noqa: E501
        :type artifacts: List[str]
        """
        self.swagger_types = {
            'runtime': Runtime,
            'configuration': str,
            'reports': List[str],
            'artifacts': List[str]
        }

        self.attribute_map = {
            'runtime': 'runtime',
            'configuration': 'configuration',
            'reports': 'reports',
            'artifacts': 'artifacts'
        }
        self._runtime = runtime
        self._configuration = configuration
        self._reports = reports
        self._artifacts = artifacts

    @classmethod
    def from_dict(cls, dikt) -> 'Pipeline':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Tool of this Tool.  # noqa: E501
        :rtype: Tool
        """
        return util.deserialize_model(dikt, cls)

    @property
    def runtime(self) -> Runtime:
        """Gets the name of this Pipeline.


        :return: The name of this Pipeline.
        :rtype: str
        """
        return self._runtime

    @runtime.setter
    def runtime(self, runtime: Runtime):
        """Sets the name of this Pipeline.


        :param name: The name of this Pipeline.
        :type name: str
        """
        if runtime is None:
            raise ValueError("Invalid value for `runtime`, must not be `None`")  # noqa: E501

        self._runtime = runtime

    @property
    def configuration(self) -> str:
        """Gets the name of this Pipeline.


        :return: The name of this Pipeline.
        :rtype: str
        """
        return self._configuration

    @configuration.setter
    def configuration(self, configuration: str):
        """Sets the name of this Pipeline.


        :param name: The name of this Pipeline.
        :type name: str
        """
        if configuration is None:
            raise ValueError("Invalid value for `configuration`, must not be `None`")  # noqa: E501

        self._configuration = configuration

    @property
    def reports(self) -> List:
        """Gets the description of this Pipeline.


        :return: The description of this Pipeline.
        :rtype: str
        """
        return self._reports

    @reports.setter
    def reports(self, reports: List):
        """Sets the description of this Pipeline.


        :param description: The description of this Pipeline.
        :type description: str
        """
        if reports is None:
            raise ValueError("Invalid value for `reports`, must not be `None`")  # noqa: E501

        self._reports = reports

    @property
    def artifacts(self) -> List:
        """Gets the description of this Pipeline.


        :return: The description of this Pipeline.
        :rtype: str
        """
        return self._artifacts

    @artifacts.setter
    def artifacts(self, artifacts: List):
        """Sets the description of this Pipeline.


        :param description: The description of this Pipeline.
        :type description: str
        """
        if artifacts is None:
            raise ValueError("Invalid value for `artifacts`, must not be `None`")  # noqa: E501

        self._artifacts = artifacts
