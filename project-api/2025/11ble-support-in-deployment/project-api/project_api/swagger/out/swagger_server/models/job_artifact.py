# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.job import Job  # noqa: F401,E501
from swagger_server import util


class JobArtifact(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, s3_url: str=None, job: Job=None, artifacts: List[str]=None, reports: List[str]=None):  # noqa: E501
        """JobArtifact - a model defined in Swagger

        :param s3_url: The s3_url of this JobArtifact.  # noqa: E501
        :type s3_url: str
        :param job: The job of this JobArtifact.  # noqa: E501
        :type job: Job
        :param artifacts: The artifacts of this JobArtifact.  # noqa: E501
        :type artifacts: List[str]
        :param reports: The reports of this JobArtifact.  # noqa: E501
        :type reports: List[str]
        """
        self.swagger_types = {
            's3_url': str,
            'job': Job,
            'artifacts': List[str],
            'reports': List[str]
        }

        self.attribute_map = {
            's3_url': 's3_url',
            'job': 'job',
            'artifacts': 'artifacts',
            'reports': 'reports'
        }
        self._s3_url = s3_url
        self._job = job
        self._artifacts = artifacts
        self._reports = reports

    @classmethod
    def from_dict(cls, dikt) -> 'JobArtifact':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The JobArtifact of this JobArtifact.  # noqa: E501
        :rtype: JobArtifact
        """
        return util.deserialize_model(dikt, cls)

    @property
    def s3_url(self) -> str:
        """Gets the s3_url of this JobArtifact.


        :return: The s3_url of this JobArtifact.
        :rtype: str
        """
        return self._s3_url

    @s3_url.setter
    def s3_url(self, s3_url: str):
        """Sets the s3_url of this JobArtifact.


        :param s3_url: The s3_url of this JobArtifact.
        :type s3_url: str
        """

        self._s3_url = s3_url

    @property
    def job(self) -> Job:
        """Gets the job of this JobArtifact.


        :return: The job of this JobArtifact.
        :rtype: Job
        """
        return self._job

    @job.setter
    def job(self, job: Job):
        """Sets the job of this JobArtifact.


        :param job: The job of this JobArtifact.
        :type job: Job
        """

        self._job = job

    @property
    def artifacts(self) -> List[str]:
        """Gets the artifacts of this JobArtifact.


        :return: The artifacts of this JobArtifact.
        :rtype: List[str]
        """
        return self._artifacts

    @artifacts.setter
    def artifacts(self, artifacts: List[str]):
        """Sets the artifacts of this JobArtifact.


        :param artifacts: The artifacts of this JobArtifact.
        :type artifacts: List[str]
        """

        self._artifacts = artifacts

    @property
    def reports(self) -> List[str]:
        """Gets the reports of this JobArtifact.


        :return: The reports of this JobArtifact.
        :rtype: List[str]
        """
        return self._reports

    @reports.setter
    def reports(self, reports: List[str]):
        """Sets the reports of this JobArtifact.


        :param reports: The reports of this JobArtifact.
        :type reports: List[str]
        """

        self._reports = reports
