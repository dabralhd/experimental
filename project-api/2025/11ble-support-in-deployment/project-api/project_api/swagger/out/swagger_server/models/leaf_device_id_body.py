# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class LeafDeviceIdBody(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, datalogging: str=None, application: str=None):  # noqa: E501
        """LeafDeviceIdBody - a model defined in Swagger

        :param datalogging: The datalogging of this LeafDeviceIdBody.  # noqa: E501
        :type datalogging: str
        :param application: The application of this LeafDeviceIdBody.  # noqa: E501
        :type application: str
        """
        self.swagger_types = {
            'datalogging': str,
            'application': str
        }

        self.attribute_map = {
            'datalogging': 'datalogging',
            'application': 'application'
        }
        self._datalogging = datalogging
        self._application = application

    @classmethod
    def from_dict(cls, dikt) -> 'LeafDeviceIdBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The leaf_device_id_body of this LeafDeviceIdBody.  # noqa: E501
        :rtype: LeafDeviceIdBody
        """
        return util.deserialize_model(dikt, cls)

    @property
    def datalogging(self) -> str:
        """Gets the datalogging of this LeafDeviceIdBody.


        :return: The datalogging of this LeafDeviceIdBody.
        :rtype: str
        """
        return self._datalogging

    @datalogging.setter
    def datalogging(self, datalogging: str):
        """Sets the datalogging of this LeafDeviceIdBody.


        :param datalogging: The datalogging of this LeafDeviceIdBody.
        :type datalogging: str
        """

        self._datalogging = datalogging

    @property
    def application(self) -> str:
        """Gets the application of this LeafDeviceIdBody.


        :return: The application of this LeafDeviceIdBody.
        :rtype: str
        """
        return self._application

    @application.setter
    def application(self, application: str):
        """Sets the application of this LeafDeviceIdBody.


        :param application: The application of this LeafDeviceIdBody.
        :type application: str
        """

        self._application = application
