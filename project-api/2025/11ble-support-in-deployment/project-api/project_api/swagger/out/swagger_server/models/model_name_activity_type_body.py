# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ModelNameActivityTypeBody(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, configuration: str=None, artifacts: List[str]=None, reports: List[str]=None):  # noqa: E501
        """ModelNameActivityTypeBody - a model defined in Swagger

        :param configuration: The configuration of this ModelNameActivityTypeBody.  # noqa: E501
        :type configuration: str
        :param artifacts: The artifacts of this ModelNameActivityTypeBody.  # noqa: E501
        :type artifacts: List[str]
        :param reports: The reports of this ModelNameActivityTypeBody.  # noqa: E501
        :type reports: List[str]
        """
        self.swagger_types = {
            'configuration': str,
            'artifacts': List[str],
            'reports': List[str]
        }

        self.attribute_map = {
            'configuration': 'configuration',
            'artifacts': 'artifacts',
            'reports': 'reports'
        }
        self._configuration = configuration
        self._artifacts = artifacts
        self._reports = reports

    @classmethod
    def from_dict(cls, dikt) -> 'ModelNameActivityTypeBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The model_name_activity_type_body of this ModelNameActivityTypeBody.  # noqa: E501
        :rtype: ModelNameActivityTypeBody
        """
        return util.deserialize_model(dikt, cls)

    @property
    def configuration(self) -> str:
        """Gets the configuration of this ModelNameActivityTypeBody.


        :return: The configuration of this ModelNameActivityTypeBody.
        :rtype: str
        """
        return self._configuration

    @configuration.setter
    def configuration(self, configuration: str):
        """Sets the configuration of this ModelNameActivityTypeBody.


        :param configuration: The configuration of this ModelNameActivityTypeBody.
        :type configuration: str
        """

        self._configuration = configuration

    @property
    def artifacts(self) -> List[str]:
        """Gets the artifacts of this ModelNameActivityTypeBody.


        :return: The artifacts of this ModelNameActivityTypeBody.
        :rtype: List[str]
        """
        return self._artifacts

    @artifacts.setter
    def artifacts(self, artifacts: List[str]):
        """Sets the artifacts of this ModelNameActivityTypeBody.


        :param artifacts: The artifacts of this ModelNameActivityTypeBody.
        :type artifacts: List[str]
        """

        self._artifacts = artifacts

    @property
    def reports(self) -> List[str]:
        """Gets the reports of this ModelNameActivityTypeBody.


        :return: The reports of this ModelNameActivityTypeBody.
        :rtype: List[str]
        """
        return self._reports

    @reports.setter
    def reports(self, reports: List[str]):
        """Sets the reports of this ModelNameActivityTypeBody.


        :param reports: The reports of this ModelNameActivityTypeBody.
        :type reports: List[str]
        """

        self._reports = reports
