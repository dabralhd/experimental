# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from project_api.models.base_model_ import Model
from swagger_server.models.bluest_v3_payload import BluestV3Payload  # noqa: F401,E501
from project_api import util


class DeploymentApplication(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, uuid: str=None, type: str=None, device_template_uri: str=None, device_template_id: str=None, device_manifest_uri: str=None, image_uri: str=None, module_id: str=None, binary_uri: str=None, binary_id: int=None, protocol: int=None, bluestv3_payload: BluestV3Payload=None):  # noqa: E501
        """DeploymentApplication - a model defined in Swagger

        :param uuid: The uuid of this DeploymentApplication.  # noqa: E501
        :type uuid: str
        :param type: The type of this DeploymentApplication.  # noqa: E501
        :type type: str
        :param device_template_uri: The device_template_uri of this DeploymentApplication.  # noqa: E501
        :type device_template_uri: str
        :param device_template_id: The device_template_id of this DeploymentApplication.  # noqa: E501
        :type device_template_id: str
        :param device_manifest_uri: The device_manifest_uri of this DeploymentApplication.  # noqa: E501
        :type device_manifest_uri: str
        :param image_uri: The image_uri of this DeploymentApplication.  # noqa: E501
        :type image_uri: str
        :param module_id: The module_id of this DeploymentApplication.  # noqa: E501
        :type module_id: str
        :param binary_uri: The binary_uri of this DeploymentApplication.  # noqa: E501
        :type binary_uri: str
        :param binary_id: The binary_id of this DeploymentApplication.  # noqa: E501
        :type binary_id: int
        :param protocol: The protocol of this DeploymentApplication.  # noqa: E501
        :type protocol: int
        :param bluestv3_payload: The bluestv3_payload of this DeploymentApplication.  # noqa: E501
        :type bluestv3_payload: BluestV3Payload
        """
        self.swagger_types = {
            'uuid': str,
            'type': str,
            'device_template_uri': str,
            'device_template_id': str,
            'device_manifest_uri': str,
            'image_uri': str,
            'module_id': str,
            'binary_uri': str,
            'binary_id': int,
            'protocol': int,
            'bluestv3_payload': BluestV3Payload
        }

        self.attribute_map = {
            'uuid': 'uuid',
            'type': 'type',
            'device_template_uri': 'device_template_uri',
            'device_template_id': 'device_template_id',
            'device_manifest_uri': 'device_manifest_uri',
            'image_uri': 'image_uri',
            'module_id': 'module_id',
            'binary_uri': 'binary_uri',
            'binary_id': 'binary_id',
            'protocol': 'protocol',
            'bluestv3_payload': 'bluestv3_payload'
        }
        self._uuid = uuid
        self._type = type
        self._device_template_uri = device_template_uri
        self._device_template_id = device_template_id
        self._device_manifest_uri = device_manifest_uri
        self._image_uri = image_uri
        self._module_id = module_id
        self._binary_uri = binary_uri
        self._binary_id = binary_id
        self._protocol = protocol
        self._bluestv3_payload = bluestv3_payload

    @classmethod
    def from_dict(cls, dikt) -> 'DeploymentApplication':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DeploymentApplication of this DeploymentApplication.  # noqa: E501
        :rtype: DeploymentApplication
        """
        return util.deserialize_model(dikt, cls)

    @property
    def uuid(self) -> str:
        """Gets the uuid of this DeploymentApplication.


        :return: The uuid of this DeploymentApplication.
        :rtype: str
        """
        return self._uuid

    @uuid.setter
    def uuid(self, uuid: str):
        """Sets the uuid of this DeploymentApplication.


        :param uuid: The uuid of this DeploymentApplication.
        :type uuid: str
        """

        self._uuid = uuid

    @property
    def type(self) -> str:
        """Gets the type of this DeploymentApplication.


        :return: The type of this DeploymentApplication.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this DeploymentApplication.


        :param type: The type of this DeploymentApplication.
        :type type: str
        """

        self._type = type

    @property
    def device_template_uri(self) -> str:
        """Gets the device_template_uri of this DeploymentApplication.


        :return: The device_template_uri of this DeploymentApplication.
        :rtype: str
        """
        return self._device_template_uri

    @device_template_uri.setter
    def device_template_uri(self, device_template_uri: str):
        """Sets the device_template_uri of this DeploymentApplication.


        :param device_template_uri: The device_template_uri of this DeploymentApplication.
        :type device_template_uri: str
        """

        self._device_template_uri = device_template_uri

    @property
    def device_template_id(self) -> str:
        """Gets the device_template_id of this DeploymentApplication.


        :return: The device_template_id of this DeploymentApplication.
        :rtype: str
        """
        return self._device_template_id

    @device_template_id.setter
    def device_template_id(self, device_template_id: str):
        """Sets the device_template_id of this DeploymentApplication.


        :param device_template_id: The device_template_id of this DeploymentApplication.
        :type device_template_id: str
        """

        self._device_template_id = device_template_id

    @property
    def device_manifest_uri(self) -> str:
        """Gets the device_manifest_uri of this DeploymentApplication.


        :return: The device_manifest_uri of this DeploymentApplication.
        :rtype: str
        """
        return self._device_manifest_uri

    @device_manifest_uri.setter
    def device_manifest_uri(self, device_manifest_uri: str):
        """Sets the device_manifest_uri of this DeploymentApplication.


        :param device_manifest_uri: The device_manifest_uri of this DeploymentApplication.
        :type device_manifest_uri: str
        """

        self._device_manifest_uri = device_manifest_uri

    @property
    def image_uri(self) -> str:
        """Gets the image_uri of this DeploymentApplication.


        :return: The image_uri of this DeploymentApplication.
        :rtype: str
        """
        return self._image_uri

    @image_uri.setter
    def image_uri(self, image_uri: str):
        """Sets the image_uri of this DeploymentApplication.


        :param image_uri: The image_uri of this DeploymentApplication.
        :type image_uri: str
        """

        self._image_uri = image_uri

    @property
    def module_id(self) -> str:
        """Gets the module_id of this DeploymentApplication.


        :return: The module_id of this DeploymentApplication.
        :rtype: str
        """
        return self._module_id

    @module_id.setter
    def module_id(self, module_id: str):
        """Sets the module_id of this DeploymentApplication.


        :param module_id: The module_id of this DeploymentApplication.
        :type module_id: str
        """

        self._module_id = module_id

    @property
    def binary_uri(self) -> str:
        """Gets the binary_uri of this DeploymentApplication.


        :return: The binary_uri of this DeploymentApplication.
        :rtype: str
        """
        return self._binary_uri

    @binary_uri.setter
    def binary_uri(self, binary_uri: str):
        """Sets the binary_uri of this DeploymentApplication.


        :param binary_uri: The binary_uri of this DeploymentApplication.
        :type binary_uri: str
        """

        self._binary_uri = binary_uri

    @property
    def binary_id(self) -> int:
        """Gets the binary_id of this DeploymentApplication.


        :return: The binary_id of this DeploymentApplication.
        :rtype: int
        """
        return self._binary_id

    @binary_id.setter
    def binary_id(self, binary_id: int):
        """Sets the binary_id of this DeploymentApplication.


        :param binary_id: The binary_id of this DeploymentApplication.
        :type binary_id: int
        """

        self._binary_id = binary_id

    @property
    def protocol(self) -> int:
        """Gets the protocol of this DeploymentApplication.


        :return: The protocol of this DeploymentApplication.
        :rtype: int
        """
        return self._protocol

    @protocol.setter
    def protocol(self, protocol: int):
        """Sets the protocol of this DeploymentApplication.


        :param protocol: The protocol of this DeploymentApplication.
        :type protocol: int
        """

        self._protocol = protocol

    @property
    def bluestv3_payload(self) -> BluestV3Payload:
        """Gets the bluestv3_payload of this DeploymentApplication.


        :return: The bluestv3_payload of this DeploymentApplication.
        :rtype: BluestV3Payload
        """
        return self._bluestv3_payload

    @bluestv3_payload.setter
    def bluestv3_payload(self, bluestv3_payload: BluestV3Payload):
        """Sets the bluestv3_payload of this DeploymentApplication.


        :param bluestv3_payload: The bluestv3_payload of this DeploymentApplication.
        :type bluestv3_payload: BluestV3Payload
        """

        self._bluestv3_payload = bluestv3_payload
