# coding: utf-8

from __future__ import absolute_import

from datetime import date, datetime  # noqa: F401
from typing import Dict, List  # noqa: F401

from project_api import util
from project_api.models.base_model_ import Model


class JobArtifact(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, s3_url: str=None, job: str=None):  # noqa: E501
        """JobArtifact - a model defined in Swagger

        :param s3_url: The s3_url of this JobArtifact.  # noqa: E501
        :type s3_url: str
        :param job: The job of this JobArtifact.  # noqa: E501
        :type job: str
        """
        self.swagger_types = {
            's3_url': str,
            'job': str
        }

        self.attribute_map = {
            's3_url': 's3_url',
            'job': 'job'
        }
        self._s3_url = s3_url
        self._job = job

    @classmethod
    def from_dict(cls, dikt) -> 'JobArtifact':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The JobArtifact of this JobArtifact.  # noqa: E501
        :rtype: JobArtifact
        """
        return util.deserialize_model(dikt, cls)

    @property
    def s3_url(self) -> str:
        """Gets the s3_url of this JobArtifact.


        :return: The s3_url of this JobArtifact.
        :rtype: str
        """
        return self._s3_url

    @s3_url.setter
    def s3_url(self, s3_url: str):
        """Sets the s3_url of this JobArtifact.


        :param s3_url: The s3_url of this JobArtifact.
        :type s3_url: str
        """
        if s3_url is None:
            raise ValueError("Invalid value for `s3_url`, must not be `None`")  # noqa: E501

        self._s3_url = s3_url

    @property
    def job(self) -> str:
        """Gets the job of this JobArtifact.


        :return: The job of this JobArtifact.
        :rtype: str
        """
        return self._job

    @job.setter
    def job(self, job: str):
        """Sets the job of this JobArtifact.


        :param job: The job of this JobArtifact.
        :type job: str
        """
        if job is None:
            raise ValueError("Invalid value for `job`, must not be `None`")  # noqa: E501

        self._job = job
