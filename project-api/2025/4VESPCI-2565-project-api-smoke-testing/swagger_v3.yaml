openapi: 3.0.2
info:
  title: STAIoTCraft - Project API
  description: REST API to access STAIoTCraft Back-End web-service User Projects
  version: 3.0.7
servers:
- url: /3
paths:
  /templates/projects:
    summary: Provides the project templates data resource (get-started-projects list supported)
    description: ""
    get:
      tags:
      - Project templates
      summary: Project templates list
      description: ""
      operationId: app_get_templates_projects
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
                x-content-type: application/json
      x-openapi-router-controller: project_api.controllers.project_templates_controller
  /templates/projects/{project_name}/icon:
    summary: Project templates icon resource
    description: "Endpoint to GET the icon associated with a project"
    get:
      tags:
      - Project
      summary: Get project icon associated to the given name.
      description: ""
      operationId: app_get_template_project_icon
      parameters:
      - name: project_name
        in: path
        description: Project `name` identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
      responses:
        "200":
          description: OK.
          content:
            image/*:
              schema: 
                type: string
                format: binary
        "404":
          description: Not found.
      x-openapi-router-controller: project_api.controllers.project_templates_controller
  /templates/projects/{project_name}/models/{model_name}/{activity_type}:
    summary: Public projects activity data resource
    description: ""
    get:
      security: []
      tags:
      - Public projects activity
      summary: Get the file contents of artifacts, reports or configuration of the activity for public projects
      description: ""
      operationId: app_get_public_projects_activity
      parameters:
      - name: project_name
        in: path
        description: Project `name` identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
      - name: model_name
        in: path
        description: Model `name` identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
      - name: activity_type
        in: path
        description: Model `activity_type` identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
      - name: type
        in: query
        description: string corresponding to artifact to be GET artifacts, reports, runtime OR config
        schema:
          type: string
        required: false
      - name: name
        in: query
        description: Filename of artifact for which GET is issued
        schema:
          type: string
        required: false
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string                
        "400":
          description: Bad request
        "404":
          description: Not found
      x-openapi-router-controller: project_api.controllers.activity_controller
  /projects:
    summary: Projects data resource
    description: ""
    get:
      tags:
      - Projects
      summary: Projects list
      description: ""
      operationId: app_get_projects
      parameters:
        - name: as_org
          in: query
          description: |
            sometimes a user will share a project with an org
          required: false
          schema:
            type: string
            example: 8s28038jgmf8cn8a7ka2hzhj10            
            minLength: 1
            pattern: "^[a-zA-Z0-9_-]+$"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
                x-content-type: application/json
      security:
      - bearerAuth:
        - secret
      x-openapi-router-controller: project_api.controllers.projects_controller
    post:
      tags:
      - Projects
      summary: Create new project
      description: ""
      parameters:
        - name: is_user_project
          in: query
          description: Boolean flag which indicates whether 'project_name_to_clone' is a user project
          required: false
          schema:
            type: boolean    
        - name: as_org
          in: query
          description: |
            sometimes a user will share a project with an org
          required: false
          schema:
            type: string
            minLength: 1
            pattern: "^[a-zA-Z0-9_-]+$"
            example: 8s28038jgmf8cn8a7ka2hzhj10                 
      operationId: app_create_project
      requestBody:
        description: New project model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewProject'
      responses:
        "201":
          description: Created.
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
      security:
      - bearerAuth:
        - secret
      x-openapi-router-controller: project_api.controllers.projects_controller
  /projects/{project_name}:
    summary: Project data resource
    description: ""
    get:
      tags:
      - Project
      summary: Get project associated to the given name.
      description: ""
      operationId: app_get_project
      parameters:
      - name: project_name
        in: path
        description: Project `name` identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
      - name: as_org
        in: query
        description: |
          sometimes a user will share a project with an org
        required: false
        schema:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          example: 8s28038jgmf8cn8a7ka2hzhj10  
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        "401":
          description: Unauthorized.
        "404":
          description: Not found.
      security:
      - bearerAuth:
        - secret
      x-openapi-router-controller: project_api.controllers.project_controller
    delete:
      tags:
      - Project
      summary: Delete project associated to the given name.
      description: ""
      operationId: app_delete_project
      parameters:
      - name: project_name
        in: path
        description: Project `name` identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK.
        "401":
          description: Unauthorized.
        "404":
          description: Not found.
      security:
      - bearerAuth:
        - secret
      x-openapi-router-controller: project_api.controllers.project_controller
  /projects/{project_name}/icon:
    summary: Project icon resource
    description: "Endpoint to GET the icon associated with a project"
    get:
      tags:
      - Project
      summary: Get project icon associated to the given name.
      description: ""
      operationId: app_get_project_icon
      parameters:
      - name: project_name
        in: path
        description: Project `name` identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
      responses:
        "200":
          description: OK.
          content:
            image/*:
              schema: 
                type: string
                format: binary
        "404":
          description: Not found.
      security:
      - bearerAuth:
        - secret
      x-openapi-router-controller: project_api.controllers.project_controller
  /projects/{project_name}/models:
    summary: Models data resource
    description: ""
    post:
      tags:
      - Models
      summary: Create new model
      description: ""
      operationId: app_create_model
      parameters:
      - name: project_name
        in: path
        description: Project `name` identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
      - name: as_org
        in: query
        description: |
          sometimes a user will copy a model, using rights of an organization
        required: false
        schema:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          example: 8s28038jgmf8cn8a7ka2hzhj10          
      requestBody:
        description: The model to be added (or cloned).
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewModel'
        required: true
      responses:
        "201":
          description: OK.
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "404":
          description: Not found.
      security:
      - bearerAuth:
        - secret
      x-openapi-router-controller: project_api.controllers.models_controller
  /projects/{project_name}/models/{model_name}:
    summary: Model data resource
    description: ""
    delete:
      tags:
      - Model
      summary: Delete model associated to the given name.
      description: ""
      operationId: app_delete_model
      parameters:
      - name: project_name
        in: path
        description: Project `name` identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
      - name: model_name
        in: path
        description: Model `name` identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
      responses:
        "200":
          description: OK.
        "401":
          description: Unauthorized.
        "404":
          description: Not found.
      security:
      - bearerAuth:
        - secret
      x-openapi-router-controller: project_api.controllers.model_controller
    patch:
      tags:
      - Models
      summary: Patch a model
      description: ""
      operationId: app_patch_model
      parameters:
      - name: project_name
        in: path
        description: Project `name` identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
      - name: model_name
        in: path
        description: Model `name` identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
      requestBody:
        description: The model to be patched.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewModel'
        required: true
      responses:
        "201":
          description: OK.
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "404":
          description: Not found.
      security:
      - bearerAuth:
        - secret
      x-openapi-router-controller: project_api.controllers.model_controller
  /projects/{project_name}/models/{model_name}/{activity_type}:
    summary: Activity data resource
    description: ""
    post:
      tags:
      - Activity
      summary: Create new Activity
      description: ""
      operationId: app_create_activity
      parameters:
      - name: project_name
        in: path
        description: Project `name` identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
      - name: model_name
        in: path
        description: Model `name` identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
      - name: activity_type
        in: path
        description: Activity `name` identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
      requestBody:
        description: The activity to be added.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTraining'
        required: true
      responses:
        "201":
          description: Created.
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "404":
          description: Not found.
      security:
      - bearerAuth:
        - secret
      x-openapi-router-controller: project_api.controllers.activity_controller
    put:
      tags:
      - Activity
      summary: Update Activity JSON 
      description: ""
      operationId: app_update_activity
      parameters:
      - name: project_name
        in: path
        description: Project `name` identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
      - name: model_name
        in: path
        description: Model `name` identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
      - name: activity_type
        in: path
        description: Activity `name` identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
      requestBody:
        description: The activity to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Training'
        required: true
      responses:
        "201":
          description: Created.
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "404":
          description: Not found.
      security:
      - bearerAuth:
        - secret
      x-openapi-router-controller: project_api.controllers.activity_controller
    patch:
      tags:
      - Activity
      summary: Update partial Activity JSON
      description: ""
      operationId: app_patch_activity
      parameters:
      - name: project_name
        in: path
        description: Project `name` identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
      - name: model_name
        in: path
        description: Model `name` identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
      - name: activity_type
        in: path
        description: Activity `name` identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
      requestBody:
        description: The activity to be patched.
        content:
          application/json:
            schema:
              type: object
              properties:
                configuration:
                  type: string
                artifacts:
                  type: array
                  items:
                    type: string        
                reports:
                  type: array
                  items:
                    type: string
        required: true
      responses:
        "201":
          description: Created.
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "404":
          description: Not found.
      security:
      - bearerAuth:
        - secret
      x-openapi-router-controller: project_api.controllers.activity_controller
    delete:
      tags:
      - Activity
      summary: Delete the activity associated to the given name.
      description: ""
      operationId: app_delete_activity
      parameters:
      - name: project_name
        in: path
        description: Project `name` identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: model_name
        in: path
        description: Model `name` identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: activity_type
        in: path
        description: Activity `name` identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "400":
          description: Bad request
        "401":
          description: Unathorized
        "404":
          description: Not found
      security:
      - bearerAuth:
        - secret
      x-openapi-router-controller: project_api.controllers.activity_controller
    get:
      tags:
      - Activity
      summary: Get the file contents of artifacts, reports or configuration of the activity
      description: ""
      operationId: app_get_activity
      parameters:
      - name: project_name
        in: path
        description: Project `name` identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: model_name
        in: path
        description: Model `name` identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: activity_type
        in: path
        description: Activity `name` identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: type
        in: query
        description: string corresponding to artifact to be GET artifacts, reports, runtime OR config
        schema:
          type: string
        required: false
      - name: name
        in: query
        description: Filename of artifact for which GET is issued
        schema:
          type: string
        required: false
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string                
        "400":
          description: Bad request
        "401":
          description: Unathorized
        "404":
          description: Not found
      security:
      - bearerAuth:
        - secret
      x-openapi-router-controller: project_api.controllers.activity_controller
  /projects/{project_name}/models/{model_name}/{activity_type}/job:
    summary: Activity Job data resource
    description: "Add a job json object to the model activity"
    post:
      tags:
      - Job
      summary: Create new Activity Job and add a job json object to the model activity in Project JSON file
      description: ""
      operationId: app_create_job_for_activity
      parameters:
      - name: project_name
        in: path
        description: Project `name` identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
      - name: model_name
        in: path
        description: Model `name` identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
      - name: activity_type
        in: path
        description: Activity `name` identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
      requestBody:
        description: The activity to be added.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
        required: true
      responses:
        "201":
          description: Created.
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "404":
          description: Not found.
      security:
      - bearerAuth:
        - secret
      x-openapi-router-controller: project_api.controllers.activity_controller
  /projects/{project_name}/models/{model_name}/{activity_type}/artifacts:
    summary: Download activity artifacts data resource to user workspace
    description: "Download activity artifacts of the project/model"
    post:
      tags:
      - Artifacts
      summary: Download Activity Job Artifacts
      description: ""
      operationId: app_download_activity_artifacts
      parameters:
      - name: project_name
        in: path
        description: Project `name` identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
      - name: model_name
        in: path
        description: Model `name` identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
      - name: activity_type
        in: path
        description: Activity `name` identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
      requestBody:
        description: The job artifact to be downloaded to user workspace.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobArtifact'
        required: true
      responses:
        "201":
          description: Created.
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "404":
          description: Not found.
      security:
      - bearerAuth:
        - secret
      x-openapi-router-controller: project_api.controllers.activity_controller
  /projects/{project_name}/models/{model_name}/{activity_type}/configuration:
    summary: Activity Configuration file data resource 
    description: "Update activity configuration file of the project/model/activity"
    post:
      tags:
      - Configuration
      summary: Create activity configuration file of the project/model/activity
      description: ""
      operationId: app_create_activity_configuration
      parameters:
      - name: project_name
        in: path
        description: Project `name` identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
      - name: model_name
        in: path
        description: Model `name` identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
      - name: activity_type
        in: path
        description: Activity `name` identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
      requestBody:
        description: Create activity configuration file of the project/model/activity
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/TrainingMLCConfiguration'
        required: true
      responses:
        "201":
          description: Created.
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "404":
          description: Not found.
      security:
      - bearerAuth:
        - secret
      x-openapi-router-controller: project_api.controllers.activity_controller
    patch:
      tags:
      - Configuration
      summary: Update activity configuration file of the project/model/activity
      description: ""
      operationId: app_patch_activity_configuration
      parameters:
      - name: project_name
        in: path
        description: Project `name` identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
      - name: model_name
        in: path
        description: Model `name` identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
      - name: activity_type
        in: path
        description: Activity `name` identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
      requestBody:
        description: The job artifact to be downloaded to user workspace.
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/TrainingMLCConfiguration'
        required: true
      responses:
        "201":
          description: Created.
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "404":
          description: Not found.
      security:
      - bearerAuth:
        - secret
      x-openapi-router-controller: project_api.controllers.activity_controller
  /projects/{project_name}/deployments/{deployment_id}/leaf/{device_id}:
    get:
      security:
      - bearerAuth:
        - secret
      parameters:
        - in: path
          name: device_id
          schema:
            type: string
            minLength: 1
            pattern: "^[a-zA-Z0-9_-]+$"
          required: true
        - in: path
          name: project_name
          schema:
            type: string
            minLength: 1
            pattern: "^[a-zA-Z0-9_-]+$"
          required: true
        - in: path
          name: deployment_id
          schema:
            type: string
            minLength: 1
            pattern: "^[a-zA-Z0-9_-]+$"
          required: true
        - in: query
          name: resource
          schema:
            type: string
            enum: [datalogging_device_config_uri,datalogging_device_template_uri,datalogging_firmware_uri,inference_device_template_uri,inference_firmware_uri,inference_ml_uri]
          required: true
      tags:
      - Deployment
      summary: Get files relating to a leaf device
      description: ""
      operationId: app_get_deployment_leaf
      responses:
        "200":
          description: OK.
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "404":
          description: Not found.
      x-openapi-router-controller: project_api.controllers.deployment_controller
  /projects/{project_name}/deployments/{deployment_id}/gateway/{device_id}:
    get:
      security:
      - bearerAuth:
        - secret
      parameters:
        - in: path
          name: device_id
          schema:
            type: string
            minLength: 1
            pattern: "^[a-zA-Z0-9_-]+$"
          required: true
        - in: path
          name: project_name
          schema:
            type: string
            minLength: 1
            pattern: "^[a-zA-Z0-9_-]+$"
          required: true
        - in: path
          name: deployment_id
          schema:
            type: string
            minLength: 1
            pattern: "^[a-zA-Z0-9_-]+$"
          required: true
        - in: query
          name: resource
          schema:
            type: string
            enum: [configuration_uri,device_manifest_uri,device_template_uri, image_uri]
          required: true
      tags:
      - Deployment
      summary: Get files relating to a gateway device
      description: ""
      operationId: app_get_deployment_gateway
      responses:
        "200":
          description: OK.
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "404":
          description: Not found.
      x-openapi-router-controller: project_api.controllers.deployment_controller
  /projects/{project_name}/deployments:
    post:
      security:
      - bearerAuth:
        - secret
      parameters:
        - in: path
          name: project_name
          schema:
            type: string
            minLength: 1
            pattern: "^[a-zA-Z0-9_-]+$"
          required: true
      tags:
      - Deployment
      summary: Create deployment of a project
      description: ""
      operationId: app_create_deployment_id
      requestBody:
        description: The deployment to be added.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - applications
                - deployment
              properties:
                applications:
                  type: array
                  items:
                    type: object
                    properties:
                      device_manifest_uri:
                        type: string
                      device_template_id:
                        type: string
                      device_template_uri:
                        type: string
                      image_uri:
                        type: string
                      module_id:
                        type: string
                      type:
                        type: string
                      protocol:
                        type: integer
                      binary_id:
                        type: integer
                      binary_uri:
                        type: string 
                deployment:
                  type: object
                  properties:
                    display_name:
                      type: string
                    description:
                      type: string
                    cloud_params:
                      type: object
                      properties:
                        type:
                          type: string
                        app_url:
                          type: string
                    leaf:
                      type: array
                      items: 
                        type: object
                        properties:
                          gateway_id:
                            type: string
                          device_id:
                            type: string
                          application:
                            type: string
                          description:
                            type: string
                          display_name:
                            type: string
                          datalogging:
                            type: object
                            properties:
                              application:
                                type: string
                              firmware_update:
                                type: boolean
                          inference:
                            type: object
                            properties:
                              application:
                                type: string
                              firmware_update:
                                type: boolean
                              models:
                                type: array
                                items: 
                                  type: object
                                  properties:
                                    artifact_type:
                                      type: string
                                    component_name:
                                      type: string
                                    model_name_reference:
                                      type: string
                    gateway:
                      type: array
                      items:
                        type: object
                        properties:
                          application:
                            type: string
                          description:
                            type: string
                          display_name:
                            type: string
                          device_id:
                            type: string
                          wifi_mode:
                            type: string
      responses:
        "200":
          description: OK.
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "404":
          description: Not found.
      x-openapi-router-controller: project_api.controllers.deployment_controller
  /projects/{project_name}/deployments/{deployment_id}:
    put:
      security:
      - bearerAuth:
        - secret
      parameters:
        - in: path
          name: project_name
          schema:
            type: string
            minLength: 1
            pattern: "^[a-zA-Z0-9_-]+$"
          required: true
        - in: path
          name: deployment_id
          schema:
            type: string
            minLength: 1
            pattern: "^[a-zA-Z0-9_-]+$"
          required: true
      tags:
      - Deployment
      summary: Update deployment of a project
      description: ""
      operationId: app_update_deployment_id
      requestBody:
        description: The deployment to be added.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                display_name:
                  type: string
                description:
                  type: string
                last_update_time:
                  type: string
                  format: date-time
                last_deploy_result:
                  type: string
                  enum: [deploy_success,deploy_error,undeploy_success,undeploy_error]
                cloud_params:
                  type: object
                  properties:
                    type:
                      type: string
                    app_url:
                      type: string
                leaf:
                  type: array
                  items:
                    type: object
                    properties:
                      _device_id:
                        type: string
                      device_id:
                        type: string
                      gateway_id:
                        type: string
                      description:
                        type: string
                      display_name:
                        type: string
                      datalogging:
                        type: object
                        properties:
                          application:
                            type: string
                          firmware_update:
                            type: boolean
                      inference:
                        type: object
                        properties:
                          application:
                            type: string
                          firmware_update:
                            type: boolean
                          models:
                            type: array
                            items: 
                              type: object
                              properties:
                                artifact_type:
                                  type: string
                                component_name:
                                  type: string
                                model_name_reference:
                                  type: string
                gateway:
                  type: array
                  items:
                    type: object
                    properties:
                      _device_id:
                        type: string
                      device_id:
                        type: string
                      application:
                        type: string
                      description:
                        type: string
                      display_name:
                        type: string                      
                      wifi_mode:
                        type: string
      responses:
        "200":
          description: OK.
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "404":
          description: Not found.
      x-openapi-router-controller: project_api.controllers.deployment_controller
    delete:
      security:
      - bearerAuth:
        - secret
      parameters:
        - in: path
          name: project_name
          schema:
            type: string
            minLength: 1
            pattern: "^[a-zA-Z0-9_-]+$"
          required: true
        - in: path
          name: deployment_id
          schema:
            type: string
          required: true
      tags:
      - Deployment
      summary: Delete the deployment ID of a project
      description: ""
      operationId: app_delete_deployment_id
      responses:
        "200":
          description: OK.
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "404":
          description: Not found.
      x-openapi-router-controller: project_api.controllers.deployment_controller
  /projects/{project_name}/deployments/{deployment_name}/devices/{device_id}/artifacts:
    summary: Deployments data resource
    description: ""
    get: 
      operationId: get_artifacts
      tags:
      - Deployment artifacts
      summary: Get deployment artifacts of a project
      parameters:
      - name: project_name
        in: path
        description: Project `name` identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
      - name: deployment_name
        in: path
        description: Deployment `name` identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
      - name: device_id
        in: path
        description: Device `ID` identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
      - name: log_uuid
        in: query
        description: Existing input source uuid reference
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
            - inference_app_device_model
            - datalogging_app_device_model
            - inference_app_binary
            - datalogging_app_binary
      responses:
        "200":
          description: OK.
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "404":
          description: Not found.
      security:
      - bearerAuth:
        - secret
      x-openapi-router-controller: project_api.controllers.deployment_controller
  /projects/{project_name}/applications/{application_id}:
    delete:
      security:
      - bearerAuth:
        - secret
      parameters:
        - in: path
          name: project_name
          schema:
            type: string
            minLength: 1
            pattern: "^[a-zA-Z0-9_-]+$"
          required: true
        - in: path
          name: application_id
          schema:
            type: string
            minLength: 1
            pattern: "^[a-zA-Z0-9_-]+$"
          required: true
      tags:
      - Applications
      summary: Delete the application ID of a project
      description: ""
      operationId: app_delete_application_id
      responses:
        "200":
          description: OK.
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "404":
          description: Not found.
      x-openapi-router-controller: project_api.controllers.deployment_controller
    patch:
      security:
      - bearerAuth:
        - secret
      parameters:
        - in: path
          name: project_name
          schema:
            type: string
            minLength: 1
            pattern: "^[a-zA-Z0-9_-]+$"
          required: true
        - in: path
          name: application_id
          schema:
            type: string
            minLength: 1
            pattern: "^[a-zA-Z0-9_-]+$"
          required: true
      requestBody:
        description: The application to be patched.
        content:
          application/json:
            schema:
              type: object
              properties:
                device_manifest_uri:
                  type: string
                device_template_id:
                  type: string
                device_template_uri:
                  type: string
                image_uri:
                  type: string
                module_id:
                  type: string
                type:
                  type: string
                protocol:
                  type: integer
                binary_id:
                  type: integer
                binary_uri:
                  type: string 
        required: true
      tags:
      - Applications
      summary: Patch the application ID of a project
      description: ""
      operationId: app_update_application_id
      responses:
        "200":
          description: OK.
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "404":
          description: Not found.
      x-openapi-router-controller: project_api.controllers.deployment_controller


components:
  schemas:
    EFSUsage:
      type: object
      properties:
        efs_usage_breached:
          type: boolean
      example:
        efs_usage: 
          efs_usage_breached: true
    NewProject:
      type: object
      required:
      - ai_project_name
      properties:
        project_name_to_clone:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
        ai_project_name:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
        description:
          type: string
        reference:
          type: string
        version:
          type: string
        creation_time:
          type: string
        last_update_time:
          type: string
      example:
        ai_project_name: project_example
        description: Project example description
        version: 0.0.1
    Project:
      required:
      - ai_project_name
      - description
      - models
      - uuid
      - version
      - creation_time
      - last_update_time
      type: object
      properties:
        uuid:
          type: string
          pattern: "^[a-zA-Z0-9_-]+$"
        ai_project_name:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
        display_name:
          type: string
        description:
          type: string
        reference:
          type: string
        version:
          type: string
        creation_time:
          type: string
        last_update_time:
          type: string
        models:
          type: array
          items:
            $ref: '#/components/schemas/Model'
        deployments:
          type: array
          items:
            $ref: '#/components/schemas/Deployment'
      example:
        ai_project_name: ai_project_name
        reference: reference
        models:
        - training:
            runtime:
              job_id: job_id
              tool: tool
              version: version
            configuration: configuration
            artifacts:
              - artifacts
              - artifacts
            reports:
              - reports
          name: name
          description: description
          model_metadata:
            type: classifier
            classes:
            - classes
            - classes
          dataset:
            dataset_id: dataset_id
            name: name
          target:
            type: type
            component: component
            device: device
          uuid: uuid
        - training:
            runtime:
              job_id: job_id
              tool: tool
              version: version
            configuration: configuration
            artifacts:
              - artifacts
              - artifacts
            reports:
              - reports
          name: name
          description: description
          model_metadata:
            type: classifier
            classes:
            - classes
            - classes
          uuid: uuid
        description: description
        uuid: uuid
        version: version
    NewModel:
      type: object
      required:
      - name
      properties:
        model_name_to_clone:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
        name:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
        model_type:
          $ref: '#/components/schemas/ModelType'
        dataset:
          $ref: '#/components/schemas/Dataset'
        classes:
          type: array
          items:
            type: string
            minLength: 1
        training_type:
          $ref: '#/components/schemas/TrainingType'
        target:
          $ref: '#/components/schemas/Target'
        creation_time:
          type: string
        last_update_time:
          type: string
        model_owner_uuid:
          type: string
          pattern: "^[a-zA-Z0-9_-]+$"
      example:
        name: model_example
        model_type: classifier
        dataset:
          dataset_id: dataset_id
          name: dataset_name
        classes:
        - c1
        - c2
        training_type: offline
        target:
          type: type
          component: component
          device: device
        model_owner_uuid: model_owner_uuid  
    Model:
      required:
      - dataset
      - target
      - name
      - metadata
      - training
      - uuid
      - model_owner_uuid
      type: object
      properties:
        dataset:
          $ref: '#/components/schemas/Dataset'
        target:
          $ref: '#/components/schemas/Target'
        uuid:
          type: string
          pattern: "^[a-zA-Z0-9_-]+$"
        name:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
        metadata:
          $ref: '#/components/schemas/Model_model_metadata'
        training:
          $ref: '#/components/schemas/Training'
        creation_time:
          type: string
        last_update_time:
          type: string
        model_owner_uuid:
          type: string
          pattern: "^[a-zA-Z0-9_-]+$"
      example:
        name: name
        dataset:
          dataset_id: dataset_id
          name: dataset_name
        metadata:
          type: classifier
          classes:
          - classes
          - classes
        uuid: uuid
        target:
          type: type
          component: component
          device: device
        training:
          runtime:
            job_id: job_id
            tool: tool
            version: version
          configuration: configuration
          artifacts:
            - artifacts
            - artifacts
          reports:
            - reports
          model_owner_uuid: model_owner_uuid  
    NewTraining:
      required:
      - type
      type: object
      properties:
        type:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
        configuration:
          type: string
        artifacts:
          type: array
          items:
            type: string
        reports:
          type: array
          items:
            type: string
        creation_time:
          type: string
          format: date-time
        last_update_time:
          type: string
          format: date-time
      example:
        type: job
        configuration: MLC_Configuration.json
        artifacts:
          - artifacts
          - artifacts
        reports:
          - reports
          - reports
        creation_time:
          - creation_time
        last_update_time:
          - last_update_time
    TrainingMLCConfiguration:
      required:
        - configuration
      type: object
      properties:
        configuration: 
          type: object
      example:
        configuration: {"accelerometer_fs": "2 g",
                        "accelerometer_odr": "30 Hz"}
    Training:
      required:
      - runtime
      - configuration
      - artifacts
      - reports
      type: object
      properties:
        runtime:
          $ref: '#/components/schemas/Runtime'
        configuration:
          type: string
        artifacts:
          type: array
          items:
            type: string        
        reports:
          type: array
          items:
            type: string
        creation_time:
          type: string
          format: date-time
        last_update_time:
          type: string
          format: date-time
      example:
        runtime:
          job_id: job_id
          tool: tool
          version: version
        configuration: configuration.json
        artifacts:
          - artifacts
          - artifacts
        reports:
          - reports
          - reports
        creation_time:
          - creation_time
        last_update_time:
          - last_update_time
    Runtime:
      type: object
      properties:
        type:
          type: string
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/Job'
      example:
        type: job
        jobs:
        - jobs
        - jobs
    Job:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
        version:
          type: string
        template_id:
          type: string
          pattern: "^[a-zA-Z0-9_-]+$"
      example:
        name: job-alias
        version: job-version
        template_id: job-template-id
    JobArtifact:
      type: object
      properties:
        s3_url:
          type: string
          format: uri
        job:
          $ref: '#/components/schemas/Job'
        artifacts:
          type: array
          items:
            type: string        
        reports:
          type: array
          items:
            type: string
      example:
        s3_url: s3-url
        job:
          job_id: job_id
          tool: tool
          version: version
        artifacts:
          - artifacts
          - artifacts
        reports:
          - reports
          - reports
    Tool:
      required:
      - description
      - name
      - parameters
      - version
      type: object
      properties:
        name:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
        description:
          type: string
        version:
          type: string
        container_name:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
        container_version:
          type: string
        parameters:
          type: object
      example:
        container_name: container_name
        name: name
        description: description
        version: version
        parameters: {}
        container_version: container_version
    Dataset:
      type: object
      properties:
        dataset_id:
          type: string
        name:
          type: string
      example:
        dataset_id: dataset_id
        name: name
    TrainingType:
      type: string
      enum:
      - offline
      - online
    Target:
      type: object
      properties:
        type:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
        component:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
        device:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
      example:
        type: mlc
        component: lsm6dsv16x
        device: steval-mkboxpro          
    ModelType:
      type: string
      enum:
      - classifier
      - anomaly_detector
    Model_model_metadata:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ModelType'
        classes:
          type: array
          items:
            type: string
            minLength: 1
      example:
        type: classifier
        classes:
        - classes
        - classes
    Deployment:
      required:
      - uuid
      - display_name
      - cloud_params
      - configuration
      type: object
      properties:
        uuid:
          type: string
          pattern: "^[a-zA-Z0-9_-]+$"
        display_name:
          type: string
          minLength: 1
        description:
          type: string
        last_deploy_time:
          type: string
          format: date-time
        last_deploy_result:
          type: string
          enum: [deploy_success,deploy_error,undeploy_success,undeploy_error]
        cloud_params:
          required:
          - type
          - app_url
          type: object
          properties:
            type:
              type: string
              minLength: 1
            app_url:
              type: string
              format: uri
        configuration:
          type: object
          required:
          - leaf
          - gateway
          properties:
            leaf:
              type: array
              items:
                $ref: '#/components/schemas/Device'
            gateway:
              type: array
              items:
                $ref: '#/components/schemas/Device'
      example:
        uuid: uuid
        name: name
        display_name: display_name
        description: description
        cloud_state: cloud_state
        cloud_credentials:
          application_name: application_name
        leaf_devices:
        - gateway_name: gateway_name
          name: name
          display_name: display_name
          description: description
          cloud_credentials:
            id: id
          inference_app:
            device_model_uri: device_model_uri
            device_model_project_uri: ""
            firmware_uri: ""
            firmware_project_uri: firmware_project_uri
          datalogging_app:
            device_model_uri: device_model_uri
            device_model_project_uri: ""
            firmware_uri: ""
            firmware_project_uri: firmware_project_uri
        gateway_devices:
        - gateway_name: gateway_name
          name: name
          display_name: display_name
          description: description
          cloud_credentials:
            id: id
          inference_app:
            device_model_uri: device_model_uri
            device_model_project_uri: ""
            firmware_uri: ""
            firmware_project_uri: firmware_project_uri
          datalogging_app:
            device_model_uri: device_model_uri
            device_model_project_uri: ""
            firmware_uri: ""
            firmware_project_uri: firmware_project_uri
    Device:
      required:
      - device_id
      - description
      type: object
      properties:
        device_id:
          type: string
        description:
          type: string
        gateway_id:
          type: string
        selected_model_name:
          type: string
        module_id:
          type: string
        configuration_uri:
          type: string
        device_manifest_uri:
          type: string
        device_template_uri:
          type: string
        device_template_id:
          type: string
        wifi_mode:
          type: string
        models:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              datalogging:
                $ref: '#/components/schemas/DeviceApplication'
              inference:
                $ref: '#/components/schemas/DeviceApplication'
    DeviceApplication:
      type: object
      properties:
        device_template_uri:
          type: string
        device_template_id:
          type: string
        protocol:
          type: number
        firmware_uri:
          type: string
    UpdateDeployment:
      type: object
      properties:
        cloud_credentials:
          type: object
          properties:
            application_name:
              type: string
        leaf_devices:
          $ref: '#/components/schemas/UpdateDevice'
        gateways:
          $ref: '#/components/schemas/UpdateDevice'  
    UpdateDevice:
      type: object
      properties:
        cloud_credentials:
          type: object
          properties:
            id: 
              type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: project_api.controllers.authorization_controller.check_bearerAuth

