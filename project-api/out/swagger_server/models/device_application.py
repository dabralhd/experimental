# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class DeviceApplication(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, device_template_uri: str=None, device_template_id: str=None, protocol: float=None, firmware_uri: str=None):  # noqa: E501
        """DeviceApplication - a model defined in Swagger

        :param device_template_uri: The device_template_uri of this DeviceApplication.  # noqa: E501
        :type device_template_uri: str
        :param device_template_id: The device_template_id of this DeviceApplication.  # noqa: E501
        :type device_template_id: str
        :param protocol: The protocol of this DeviceApplication.  # noqa: E501
        :type protocol: float
        :param firmware_uri: The firmware_uri of this DeviceApplication.  # noqa: E501
        :type firmware_uri: str
        """
        self.swagger_types = {
            'device_template_uri': str,
            'device_template_id': str,
            'protocol': float,
            'firmware_uri': str
        }

        self.attribute_map = {
            'device_template_uri': 'device_template_uri',
            'device_template_id': 'device_template_id',
            'protocol': 'protocol',
            'firmware_uri': 'firmware_uri'
        }
        self._device_template_uri = device_template_uri
        self._device_template_id = device_template_id
        self._protocol = protocol
        self._firmware_uri = firmware_uri

    @classmethod
    def from_dict(cls, dikt) -> 'DeviceApplication':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DeviceApplication of this DeviceApplication.  # noqa: E501
        :rtype: DeviceApplication
        """
        return util.deserialize_model(dikt, cls)

    @property
    def device_template_uri(self) -> str:
        """Gets the device_template_uri of this DeviceApplication.


        :return: The device_template_uri of this DeviceApplication.
        :rtype: str
        """
        return self._device_template_uri

    @device_template_uri.setter
    def device_template_uri(self, device_template_uri: str):
        """Sets the device_template_uri of this DeviceApplication.


        :param device_template_uri: The device_template_uri of this DeviceApplication.
        :type device_template_uri: str
        """

        self._device_template_uri = device_template_uri

    @property
    def device_template_id(self) -> str:
        """Gets the device_template_id of this DeviceApplication.


        :return: The device_template_id of this DeviceApplication.
        :rtype: str
        """
        return self._device_template_id

    @device_template_id.setter
    def device_template_id(self, device_template_id: str):
        """Sets the device_template_id of this DeviceApplication.


        :param device_template_id: The device_template_id of this DeviceApplication.
        :type device_template_id: str
        """

        self._device_template_id = device_template_id

    @property
    def protocol(self) -> float:
        """Gets the protocol of this DeviceApplication.


        :return: The protocol of this DeviceApplication.
        :rtype: float
        """
        return self._protocol

    @protocol.setter
    def protocol(self, protocol: float):
        """Sets the protocol of this DeviceApplication.


        :param protocol: The protocol of this DeviceApplication.
        :type protocol: float
        """

        self._protocol = protocol

    @property
    def firmware_uri(self) -> str:
        """Gets the firmware_uri of this DeviceApplication.


        :return: The firmware_uri of this DeviceApplication.
        :rtype: str
        """
        return self._firmware_uri

    @firmware_uri.setter
    def firmware_uri(self, firmware_uri: str):
        """Sets the firmware_uri of this DeviceApplication.


        :param firmware_uri: The firmware_uri of this DeviceApplication.
        :type firmware_uri: str
        """

        self._firmware_uri = firmware_uri
