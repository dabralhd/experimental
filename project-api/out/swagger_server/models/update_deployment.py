# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.update_deployment_cloud_credentials import UpdateDeploymentCloudCredentials  # noqa: F401,E501
from swagger_server.models.update_device import UpdateDevice  # noqa: F401,E501
from swagger_server import util


class UpdateDeployment(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, cloud_credentials: UpdateDeploymentCloudCredentials=None, leaf_devices: UpdateDevice=None, gateways: UpdateDevice=None):  # noqa: E501
        """UpdateDeployment - a model defined in Swagger

        :param cloud_credentials: The cloud_credentials of this UpdateDeployment.  # noqa: E501
        :type cloud_credentials: UpdateDeploymentCloudCredentials
        :param leaf_devices: The leaf_devices of this UpdateDeployment.  # noqa: E501
        :type leaf_devices: UpdateDevice
        :param gateways: The gateways of this UpdateDeployment.  # noqa: E501
        :type gateways: UpdateDevice
        """
        self.swagger_types = {
            'cloud_credentials': UpdateDeploymentCloudCredentials,
            'leaf_devices': UpdateDevice,
            'gateways': UpdateDevice
        }

        self.attribute_map = {
            'cloud_credentials': 'cloud_credentials',
            'leaf_devices': 'leaf_devices',
            'gateways': 'gateways'
        }
        self._cloud_credentials = cloud_credentials
        self._leaf_devices = leaf_devices
        self._gateways = gateways

    @classmethod
    def from_dict(cls, dikt) -> 'UpdateDeployment':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UpdateDeployment of this UpdateDeployment.  # noqa: E501
        :rtype: UpdateDeployment
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cloud_credentials(self) -> UpdateDeploymentCloudCredentials:
        """Gets the cloud_credentials of this UpdateDeployment.


        :return: The cloud_credentials of this UpdateDeployment.
        :rtype: UpdateDeploymentCloudCredentials
        """
        return self._cloud_credentials

    @cloud_credentials.setter
    def cloud_credentials(self, cloud_credentials: UpdateDeploymentCloudCredentials):
        """Sets the cloud_credentials of this UpdateDeployment.


        :param cloud_credentials: The cloud_credentials of this UpdateDeployment.
        :type cloud_credentials: UpdateDeploymentCloudCredentials
        """

        self._cloud_credentials = cloud_credentials

    @property
    def leaf_devices(self) -> UpdateDevice:
        """Gets the leaf_devices of this UpdateDeployment.


        :return: The leaf_devices of this UpdateDeployment.
        :rtype: UpdateDevice
        """
        return self._leaf_devices

    @leaf_devices.setter
    def leaf_devices(self, leaf_devices: UpdateDevice):
        """Sets the leaf_devices of this UpdateDeployment.


        :param leaf_devices: The leaf_devices of this UpdateDeployment.
        :type leaf_devices: UpdateDevice
        """

        self._leaf_devices = leaf_devices

    @property
    def gateways(self) -> UpdateDevice:
        """Gets the gateways of this UpdateDeployment.


        :return: The gateways of this UpdateDeployment.
        :rtype: UpdateDevice
        """
        return self._gateways

    @gateways.setter
    def gateways(self, gateways: UpdateDevice):
        """Sets the gateways of this UpdateDeployment.


        :param gateways: The gateways of this UpdateDeployment.
        :type gateways: UpdateDevice
        """

        self._gateways = gateways
