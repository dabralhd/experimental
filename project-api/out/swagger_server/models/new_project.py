# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class NewProject(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, project_name_to_clone: str=None, ai_project_name: str=None, description: str=None, reference: str=None, version: str=None, creation_time: str=None, last_update_time: str=None):  # noqa: E501
        """NewProject - a model defined in Swagger

        :param project_name_to_clone: The project_name_to_clone of this NewProject.  # noqa: E501
        :type project_name_to_clone: str
        :param ai_project_name: The ai_project_name of this NewProject.  # noqa: E501
        :type ai_project_name: str
        :param description: The description of this NewProject.  # noqa: E501
        :type description: str
        :param reference: The reference of this NewProject.  # noqa: E501
        :type reference: str
        :param version: The version of this NewProject.  # noqa: E501
        :type version: str
        :param creation_time: The creation_time of this NewProject.  # noqa: E501
        :type creation_time: str
        :param last_update_time: The last_update_time of this NewProject.  # noqa: E501
        :type last_update_time: str
        """
        self.swagger_types = {
            'project_name_to_clone': str,
            'ai_project_name': str,
            'description': str,
            'reference': str,
            'version': str,
            'creation_time': str,
            'last_update_time': str
        }

        self.attribute_map = {
            'project_name_to_clone': 'project_name_to_clone',
            'ai_project_name': 'ai_project_name',
            'description': 'description',
            'reference': 'reference',
            'version': 'version',
            'creation_time': 'creation_time',
            'last_update_time': 'last_update_time'
        }
        self._project_name_to_clone = project_name_to_clone
        self._ai_project_name = ai_project_name
        self._description = description
        self._reference = reference
        self._version = version
        self._creation_time = creation_time
        self._last_update_time = last_update_time

    @classmethod
    def from_dict(cls, dikt) -> 'NewProject':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The NewProject of this NewProject.  # noqa: E501
        :rtype: NewProject
        """
        return util.deserialize_model(dikt, cls)

    @property
    def project_name_to_clone(self) -> str:
        """Gets the project_name_to_clone of this NewProject.


        :return: The project_name_to_clone of this NewProject.
        :rtype: str
        """
        return self._project_name_to_clone

    @project_name_to_clone.setter
    def project_name_to_clone(self, project_name_to_clone: str):
        """Sets the project_name_to_clone of this NewProject.


        :param project_name_to_clone: The project_name_to_clone of this NewProject.
        :type project_name_to_clone: str
        """

        self._project_name_to_clone = project_name_to_clone

    @property
    def ai_project_name(self) -> str:
        """Gets the ai_project_name of this NewProject.


        :return: The ai_project_name of this NewProject.
        :rtype: str
        """
        return self._ai_project_name

    @ai_project_name.setter
    def ai_project_name(self, ai_project_name: str):
        """Sets the ai_project_name of this NewProject.


        :param ai_project_name: The ai_project_name of this NewProject.
        :type ai_project_name: str
        """

        self._ai_project_name = ai_project_name

    @property
    def description(self) -> str:
        """Gets the description of this NewProject.


        :return: The description of this NewProject.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this NewProject.


        :param description: The description of this NewProject.
        :type description: str
        """

        self._description = description

    @property
    def reference(self) -> str:
        """Gets the reference of this NewProject.


        :return: The reference of this NewProject.
        :rtype: str
        """
        return self._reference

    @reference.setter
    def reference(self, reference: str):
        """Sets the reference of this NewProject.


        :param reference: The reference of this NewProject.
        :type reference: str
        """

        self._reference = reference

    @property
    def version(self) -> str:
        """Gets the version of this NewProject.


        :return: The version of this NewProject.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version: str):
        """Sets the version of this NewProject.


        :param version: The version of this NewProject.
        :type version: str
        """

        self._version = version

    @property
    def creation_time(self) -> str:
        """Gets the creation_time of this NewProject.


        :return: The creation_time of this NewProject.
        :rtype: str
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time: str):
        """Sets the creation_time of this NewProject.


        :param creation_time: The creation_time of this NewProject.
        :type creation_time: str
        """

        self._creation_time = creation_time

    @property
    def last_update_time(self) -> str:
        """Gets the last_update_time of this NewProject.


        :return: The last_update_time of this NewProject.
        :rtype: str
        """
        return self._last_update_time

    @last_update_time.setter
    def last_update_time(self, last_update_time: str):
        """Sets the last_update_time of this NewProject.


        :param last_update_time: The last_update_time of this NewProject.
        :type last_update_time: str
        """

        self._last_update_time = last_update_time
